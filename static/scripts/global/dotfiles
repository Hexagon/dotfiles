#!/usr/bin/env bash

# Check arguments
function usage() {
    echo " $(basename $0) [-u,--upload|-d,--download|-f,--full]"
    exit
}
function upload() {

    # Enter dotfiles dir
    cd "$DOTFILES_SOURCE_DIR"

    # Make git up to date
    git pull origin;

    # Sync changes of synced files

    # Enter synced folder
    cd synced;

    # Copy files
    rsync --exclude ".git/" \
		-rptgoE --ignore-non-existing ~/ .;

    cd ..;

    # Review changes
    echo -e "\nChanges synced from home directory, please review git status:\n"
    git status;
    read -p "Continue (yes/no)? " -n 1 -r
    echo    # (optional) move to a new line
    if [[ ! $REPLY =~ ^[Yy]$ ]]
    then
        exit 1
    fi

    # Commit and push
    git add .
    git commit -m "Automated sync"
    git push origin

}
function download() {
    
    # Enter dotfiles dir
    cd "$DOTFILES_SOURCE_DIR"

    # Make git up to date
    git pull origin;

   # Enter static folder
	cd static;

	# Copy files
	rsync --exclude ".git/" \
		-rptgoE . ~;

    cd ..

    # Enter template folder
	cd static;

	# Copy files
	rsync --exclude ".git/" \
		-rptgoE --ignore-existing . ~;

    cd ..
    
    #Enter synced folder
    cd synced;

    # Copy files
    rsync --exclude ".git/" \
		--update -rptgoE . ~;

    cd ..;

	
}
function full() {
    download
    upload
}
if [ -z $1 ]; then
    usage;
fi
if [ -z "$DOTFILES_SOURCE_DIR" ]; then
   echo -e "environent variable DOTFILES_SOURCE_DIR not set, have you forgot to log in/out after bootstrapping?"
   echo -e "Aborting..."
   exit
fi;
 case $1 in

  -u|--upload)
    upload
    ;;

  -d|--download)
    download
    ;;

  -f|--full)
    full
    ;;

  *)
    usage
    ;;
esac
